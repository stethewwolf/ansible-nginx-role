---
- name: Install nginx packages
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: "{{ nginx_packages }}"

- name: Nginx register certbot
  shell: |
    certbot -n register --agree-tos --email "{{ server_admin }}"
    touch /etc/letsencrypt/.registered
  args:
    creates: /etc/letsencrypt/.registered
  when: enable_https and server_admin is defined

- name: Nginx setup cronjob for cert renewal
  cron:
    name: certbot-renewal
    job: "/bin/bash -lc '/usr/local/bin/certbot -q renew'"
    minute: "0"
    hour: "14"
  when: enable_https

- name: Nginx get ssl certificates
  command: 'certbot -n --nginx certonly -d {{ item.domain }}'
  args:
    creates: '/etc/letsencrypt/live/{{ item.domain }}'
  ignore_errors: true
  loop: "{{ nginx_vhosts }}"
  when: nginx_vhosts is defined and item.ssl

- name: Create nginx vhosts
  copy:
    src: "{{ item.file }}"
    dest: "/etc/nginx/sites-available/{{ item.domain }}.conf"
    owner: root
    group: root
    mode: '0644'
    backup: false
  loop: "{{ nginx_vhosts }}"
  when: nginx_vhosts is defined 

- name: Disable default nginx vhost
  file:
    state: absent
    path: "/etc/nginx/sites-enabled/default"

- name: Enable nginx vhosts
  file:
    state: link
    src: "/etc/nginx/sites-available/{{ item.domain }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.domain }}.conf"
    owner: root
    group: root
  loop: "{{ nginx_vhosts }}"
  when: nginx_vhosts is defined and item.enabled
  notify: restart_nginx

- name: Allow connections on HTTP ports
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "80"
    jump: ACCEPT
  notify: nginx_run_iptables_save
  when: enable_http

- name: Allow connections on HTTPS ports
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "443"
    jump: ACCEPT
  notify: nginx_run_iptables_save
  when: enable_https

